version: '3.5'

x-base: &base
    restart: always
    networks:
        - internal

x-env: &env
    env_file:
        - ${ENV_FILE}

services:
    kitsu:
        <<: *base
        <<: *env
        container_name: ${COMPOSE_PROJECT_NAME}-kitsu
        image: registry.gitlab.com/mathbou/docker-cgwire/kitsu:$KITSU_VERSION
        depends_on:
            - zou-app
            - zou-event
            - zou-jobs
        ports:
            - '${PORT}:80'

    zou-app:
        <<: *base
        <<: *env
        container_name: ${COMPOSE_PROJECT_NAME}-zou-app
        image: registry.gitlab.com/mathbou/docker-cgwire/zou:$ZOU_VERSION
        depends_on:
          - db
        volumes:
            - 'previews:${PREVIEW_FOLDER}'
        command: "gunicorn --error-logfile - --access-logfile - -w 3 -k gevent -b :5000 zou.app:app"

    zou-event:
        <<: *base
        <<: *env
        container_name: ${COMPOSE_PROJECT_NAME}-zou-event
        image: registry.gitlab.com/mathbou/docker-cgwire/zou:$ZOU_VERSION
        depends_on:
          - redis
        command: "gunicorn --error-logfile - --access-logfile - -w 1 -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -b :5001 zou.event_stream:app"

    db:
        container_name: ${COMPOSE_PROJECT_NAME}-db
        image: postgres:9.5-alpine
        volumes:
            - 'db:/var/lib/postgresql/data'
            - ./pg_ctl.conf:/etc/postgresql/9.5/main/pg_ctl.conf:ro
        <<: *base

    redis:
        container_name: ${COMPOSE_PROJECT_NAME}-redis
        image: redis:alpine
        volumes:
            - 'redis:/data'
        <<: *base

volumes:
    db:
        name: ${COMPOSE_PROJECT_NAME}-db
    redis:
        name: ${COMPOSE_PROJECT_NAME}-redis
    previews:
        name: ${COMPOSE_PROJECT_NAME}-previews

networks:
    internal:
        name: ${COMPOSE_PROJECT_NAME}-internal